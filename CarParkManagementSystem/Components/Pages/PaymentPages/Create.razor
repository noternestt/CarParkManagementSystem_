@page "/payments/create"
@using Microsoft.EntityFrameworkCore
@using CarParkManagementSystem.Domain
@inject IDbContextFactory<CarParkManagementSystem.Data.CarParkManagementSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Payment</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Payment" OnValidSubmit="AddPayment" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="amount" class="form-label">Amount:</label> 
                <InputNumber id="amount" @bind-Value="Payment.Amount" class="form-control" /> 
                <ValidationMessage For="() => Payment.Amount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="cardnumber" class="form-label">CardNumber:</label> 
                <InputNumber id="cardnumber" @bind-Value="Payment.CardNumber" class="form-control" /> 
                <ValidationMessage For="() => Payment.CardNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="paymentdate" class="form-label">PaymentDate:</label> 
                <InputDate id="paymentdate" @bind-Value="Payment.PaymentDate" class="form-control" /> 
                <ValidationMessage For="() => Payment.PaymentDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="paymentstatus" class="form-label">PaymentStatus:</label> 
                <InputText id="paymentstatus" @bind-Value="Payment.PaymentStatus" class="form-control" /> 
                <ValidationMessage For="() => Payment.PaymentStatus" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="bookingid" class="form-label">BookingID:</label> 
                <InputText id="bookingid" @bind-Value="Payment.BookingID" class="form-control" /> 
                <ValidationMessage For="() => Payment.BookingID" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/payments">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Payment Payment { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPayment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Payment.Add(Payment);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/payments");
    }
}
